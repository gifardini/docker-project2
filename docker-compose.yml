version: '3.9'

services:
  postgres:
    container_name: postgres-container
    image: postgres:14.5-alpine

    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.25

    user: postgres
    
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: projeto-labbd
      POSTGRES_PORT: '5432' 
      
    cap_drop:
      - dac_override
      - fowner
      - chown
      - net_bind_service
      - setuid
      - setgid
      - fsetid
      - kill
      - setpcap
      - net_raw
      - sys_chroot
      - mknod
      - audit_write
      - setfcap

    volumes:
      - type: bind
        source: ./db
        target: /docker-entrypoint-initdb.d
      #- ./db:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data

    expose:
      - "5432" 

    healthcheck:
       test: [ "CMD", "pg_isready"]
       interval: 10s
       timeout: 5s
       retries: 5 

    networks:
      - postgres-relatorio
  
  
  rust-relatorio:
    container_name: backend-rust-relatorio
    image: giovannaopus/backend-rust:1.0
    
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5

    environment:
      ROCKET_ADDRESS: '0.0.0.0'
      ROCKET_PORT: 8080
      ROCKET_DATABASES: '{database={url="postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres/projeto-labbd"}}'
      ROCKET_SECRET_KEY: ${SECRET_KEY}
      ROCKET_LOG_LEVEL: 'debug'

    cap_drop:
      - ALL

    depends_on:
      postgres:
        condition: service_healthy

    ports:
      #- "8000:8080"
    - target: 8080
      published: 8000
      protocol: tcp
      mode: host

 
    networks:
      - postgres-relatorio
    
networks:
  postgres-relatorio:
    driver: bridge  

volumes:
  postgres:
